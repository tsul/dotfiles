set nocompatible
filetype off

call plug#begin('~/.vim/plugged')

Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'sheerun/vim-polyglot'
Plug 'scrooloose/nerdtree'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-sleuth'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-surround'
Plug 'AndrewRadev/splitjoin.vim'
Plug 'godlygeek/tabular'
Plug 'Valloric/YouCompleteMe', { 'do': './install.py --tern-completer' }
Plug 'marijnh/tern_for_vim', { 'do': 'npm install' }
Plug 'kern/vim-es7'
Plug 'mkitt/tabline.vim'
Plug 'majutsushi/tagbar'

call plug#end()

filetype on
filetype plugin on
filetype indent on

syntax on
set background=dark
colorscheme water

set autoindent
set backspace=indent,eol,start
set tabstop=2
set shiftwidth=2
set expandtab
set smarttab
set nrformats-=octal
set laststatus=2
set wildmenu
set scrolloff=5
set visualbell
set ignorecase
set smartcase
set incsearch
set hlsearch
set cursorline
set mouse=a
set shortmess+=c
set undofile
set noerrorbells visualbell t_vb=
autocmd GUIEnter * set visualbell t_vb=

let mapleader="\<Space>"

" Move within screen lines
nnoremap j gj
nnoremap k gk

" Shortcuts
nnoremap <Leader>o :Files<CR>
nnoremap <Leader>w :w<CR>
nnoremap <Leader>q :q<CR>
nnoremap <Leader>n :NERDTree<CR>
nnoremap <Leader>f :NERDTreeFind<CR>
nnoremap <Leader>r :source ~/.vimrc<CR>
nnoremap <Leader>e :e ~/.vimrc<CR>
nnoremap <Leader>c :noh<CR>
nnoremap <Leader>t :tabedit<CR>
nnoremap <Leader>g gt<CR>
nnoremap <Leader>s :Find<SPACE>

" Clipboard management
vmap <Leader>y "+y
vmap <Leader>d "+d
nmap <Leader>p "+p
nmap <Leader>P "+P
vmap <Leader>p "+p
vmap <Leader>P "+P

" Split management
nnoremap <Leader>wv :vsplit<CR>
nnoremap <Leader>ws :split<CR>
nnoremap <Leader>we <C-W>=
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

imap jk <Esc>

set splitbelow
set splitright

set number
set relativenumber

ca find Find
ca tab Tab

nmap <Leader>sk :SplitjoinSplit<CR>
nmap <Leader>sj :SplitjoinJoin<CR>

let g:polyglot_disabled = ['javascript', 'javascript.jsx']

command! -bang -nargs=* Find call fzf#vim#grep('rg --column --line-number --no-heading --fixed-strings --ignore-case --hidden --follow --glob "!.git/*" --color "always" '.shellescape(<q-args>).'| tr -d "\017"', 1, <bang>0)

" Helper funcs for statusline

function! HighlightIdUnderCursor()
  let id = synIDattr(synID(line('.'), col('.'), 1), 'name')

  if len(id)
    return id
  endif

  return ''
endfunction

function! LimitPathLength(path, maxlength)
  if len(a:path) > a:maxlength
    return pathshorten(a:path)
  endif

  return a:path
endfunction

function! ShowUnlessDefault(text, default)
  if a:text == a:default
    return ''
  endif

  return text
endfunction

hi User1 ctermfg=1 ctermbg=none
hi User7 ctermfg=7 ctermbg=none
hi User8 ctermfg=8 ctermbg=none

set statusline=\ 

set statusline+=%{LimitPathLength(expand('%f'),70)}\ 
set statusline+=%7*
set statusline+=%(%h%m%r%w\ %)
set statusline+=(
set statusline+=%(%{&ft}%)
" set statusline+=%(,\ %{ShowUnlessDefault(len(&fenc)?&fenc:&enc,'utf-8')}%)
" set statusline+=%(,\ %{ShowUnlessDefault(&fileformat,'unix')}%)
set statusline+=)

set statusline+=%=
set statusline+=%8*

set statusline+=%(%l,%c%V%)\ 
set statusline+=%P\ 
set statusline+=%((%{HighlightIdUnderCursor()})%)
